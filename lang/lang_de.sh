#!/bin/bash
# Deutsch Sprachdatei (German Language File)

# --- ALLGEMEINE TEXTE ---
LBL_YES="ja"
LBL_NO="nein"
LBL_YES_OPTIONS="ja|j"
LBL_RESET_CONFIRM_YES="ja"

# --- git_durum_kontrol.sh TEXTE ---
MSG_SCANNING_DIR="Verzeichnis wird durchsucht"
ERROR_SCAN_DIRECTORY_NOT_SET="Fehler: SCAN_DIRECTORY ist in der .env-Datei nicht festgelegt. Bitte legen Sie es auf das Verzeichnis fest, das Sie scannen möchten."
MSG_REPO_TABLE_TITLE="GIT-PROJEKTE STATUSTABELLE"
MSG_NO_GIT_REPOS_FOUND="In diesem Verzeichnis wurden keine Git-Repositories gefunden."
HEADER_PROJECT_NAME="PROJEKTNAME"
HEADER_VISIBILITY="SICHTBARKEIT"
HEADER_STATUS="UPDATE-STATUS"
HEADER_URL="GITHUB-URL"
MSG_UNTRACKED_FILES_TITLE="VERZEICHNISSE, DIE NICHT IN GIT SIND"
MSG_ALL_DIRS_ARE_REPOS="Alle Verzeichnisse sind Git-Repositories."
MSG_UPDATE_NEEDED_REPOS_TITLE="REPOSITORIES, DIE AKTUALISIERT WERDEN MÜSSEN"
PROMPT_UPDATE_CONFIRM="Möchten Sie die oben aufgelisteten veralteten Repositories aktualisieren?"
MSG_UPDATE_SCRIPT_RUNNING="Update-Skript wird ausgeführt..."
MSG_OPERATION_CANCELLED="Vorgang abgebrochen."
MSG_SCAN_COMPLETE="Scan abgeschlossen."

# --- Statusmeldungen (Prüfung) ---
STATUS_LOCAL_REPO="Lokales Git-Repo (Kein Remote hinzugefügt)"
STATUS_GH_CLI_MISSING="[gh nicht installiert]"
STATUS_REPO_NOT_FOUND="[Repo nicht gefunden]"
STATUS_VISIBILITY_PRIVATE="Privat"
STATUS_VISIBILITY_PUBLIC="Öffentlich"
STATUS_CHANGES_AWAITING_COMMIT="Änderungen vorhanden (Commit ausstehend)"
STATUS_UP_TO_DATE="Aktuell"
STATUS_AHEAD_PUSH_AWAITED="Nicht aktuell (Push ausstehend)"
STATUS_BEHIND_REMOTE_NEW="Nicht aktuell (Remote ist neuer)"
STATUS_DIVERGED="Nicht aktuell (Abweichend)"
STATUS_NO_UPSTREAM="Nicht verfolgt (Kein Upstream)"

# --- git_guncelle.sh TEXTE ---
MSG_UPDATE_STARTING="Repositories werden aktualisiert..."
MSG_TOTAL="Gesamt"
MSG_REPO_PROCESSING="Bearbeite Repo"
MSG_REPO_NOT_ACCESSIBLE="FEHLER: Verzeichnis konnte nicht betreten werden."
MSG_STATUS_LOCAL_CHANGES_FOUND="Status: Lokale Änderungen gefunden."
MSG_RUNNING_GIT_ADD="Führe 'git add .' aus..."
MSG_RUNNING_GIT_COMMIT="Führe 'git commit' aus (Nachricht:"
COMMIT_MSG_FORMAT="Automatische Aktualisierung: %d-%m-%Y %H:%M:%S"
MSG_RUNNING_GIT_PUSH="Führe 'git push' aus..."
MSG_PUSH_SUCCESS="ERFOLGREICH: Änderungen wurden erfolgreich gepusht."
MSG_PUSH_FAIL="FEHLER: 'git push' ist fehlgeschlagen. Bitte manuell prüfen."
MSG_STATUS_DIR_CLEAN="Status: Lokales Verzeichnis ist sauber. Vergleiche Commits mit Remote..."
MSG_ONLY_PUSH_AWAITED="Nur un-gepushte Commits gefunden. Führe 'git push' aus..."
MSG_PUSH_AWAITED_SUCCESS="ERFOLGREICH: Ausstehende Commits wurden erfolgreich gepusht."
MSG_REPO_BEHIND_WARNING="WARNUNG: Dieses Repo ist hinter dem Remote zurück."
MSG_REPO_BEHIND_SKIPPED="Vorgang ÜBERSPRUNGEN wegen des Risikos von Datenverlust und Konflikten."
MSG_REPO_BEHIND_MANUAL_ACTION="Bitte aktualisieren Sie dieses Repo manuell mit dem Befehl 'git pull'."
MSG_REPO_ALREADY_UP_TO_DATE="Repo ist bereits aktuell. Keine Aktion durchgeführt."
MSG_NO_UPSTREAM_WARNING="WARNUNG: Der lokale Branch dieses Repos verfolgt keinen Remote-Branch (Kein Upstream). Push/Pull nicht möglich."
MSG_UPDATE_COMPLETE="Alle Update-Vorgänge sind abgeschlossen."

# --- Interaktive Menü Texte (Update) ---
MENU_TITLE="Bitte wählen Sie, was Sie tun möchten:"
MENU_OPTION_A="[A]bbrechen und zum nächsten Repo gehen (Sicher, Empfohlen)"
MENU_DESC_A="Diese Option führt keine riskanten Operationen durch und belässt das Repo im aktuellen Zustand.\n      Sie können Konflikte später manuell lösen."
MENU_OPTION_P="Versuche, Änderungen mit [P]ull zu holen (Mittleres Risiko)"
MENU_DESC_P="Versucht, Änderungen vom Remote-Repository mit Ihrem lokalen zu mergen.\n      Kann zu einem 'Merge Conflict' (Konflikt) führen, wenn dies nicht automatisch möglich ist, und der Prozess wird anhalten."
MENU_OPTION_R="Versuche, Änderungen mit [R]ebase zu holen (Mittleres Risiko, Saubere History)"
MENU_DESC_R="Ähnlich wie 'Pull', schreibt aber die Commit-Historie neu, um sie linear zu halten.\n      Trägt das gleiche Risiko eines 'Rebase Conflict'."
MENU_OPTION_S="[S]ofort zurücksetzen und mit Remote synchronisieren (SEHR RISKANT! VORSICHT!)"
MENU_DESC_S="LÖSCHT alle Ihre lokalen Commits und macht das Repo zu einem exakten Spiegel des Zustands auf GitHub.\n      Ihre gesamte nicht gepushte Arbeit geht dauerhaft verloren!"
PROMPT_INTERACTIVE_CHOICE="Ihre Wahl (A, P, R, S): "
MSG_CHOICE_A="Wahl: Abbrechen. Keine Änderungen am Repo vorgenommen."
MSG_CHOICE_P="Wahl: Pull. Versuche 'git pull'..."
MSG_PULL_SUCCESS="ERFOLGREICH: 'git pull' abgeschlossen. Ihr Repo ist jetzt aktuell."
MSG_PULL_FAIL="FEHLER: 'git pull' fehlgeschlagen. Wahrscheinlich liegt ein Konflikt vor."
MSG_PULL_FAIL_MANUAL_ACTION="Bitte öffnen Sie dieses Repo im Terminal und prüfen Sie es manuell mit 'git status'!"
MSG_CHOICE_R="Wahl: Rebase. Versuche 'git pull --rebase'..."
MSG_REBASE_SUCCESS="ERFOLGREICH: 'git pull --rebase' abgeschlossen. Ihr Repo ist jetzt aktuell."
MSG_REBASE_FAIL="FEHLER: 'git pull --rebase' fehlgeschlagen. Wahrscheinlich liegt ein Konflikt vor."
MSG_CHOICE_S="Wahl: Sofort zurücksetzen. Dieser Vorgang ist unumkehrbar!"
PROMPT_RESET_CONFIRM="Sind Sie sicher? Alle Ihre nicht gepushten lokalen Änderungen werden gelöscht!"
MSG_RESETTING_REPO="Führe 'git reset --hard @{u}' aus..."
MSG_RESET_SUCCESS="ERFOLGREICH: Repo mit Remote synchronisiert. Lokale Änderungen wurden gelöscht."
MSG_RESET_FAIL="FEHLER: Sofortiges Zurücksetzen fehlgeschlagen."
MSG_RESET_CANCELLED="Sofortiges Zurücksetzen abgebrochen."
MSG_INVALID_CHOICE="Ungültige Wahl. Vorgang aus Sicherheitsgründen übersprungen."

# --- Interaktive Commit-Texte (Update) ---
PROMPT_COMMIT_TYPE_MENU="Bitte wählen Sie einen Commit-Typ aus:\n  1) ${GREEN}feat:${NC}     Ein neues Feature\n  2) ${YELLOW}fix:${NC}      Eine Fehlerbehebung\n  3) ${CYAN}docs:${NC}     Nur Änderungen an der Dokumentation\n  4) ${MAGENTA}style:${NC}    Änderungen, die die Bedeutung des Codes nicht beeinflussen (Leerraum, Formatierung, etc.)\n  5) ${BLUE}refactor:${NC} Eine Code-Änderung, die weder einen Fehler behebt noch ein Feature hinzufügt\n  6) ${WHITE}chore:${NC}    Änderungen am Build-Prozess oder an Hilfswerkzeugen\nIhre Wahl:"
PROMPT_COMMIT_SCOPE="Commit-Bereich eingeben (optional):"
PROMPT_COMMIT_MESSAGE="Commit-Nachricht eingeben:"
MSG_COMMIT_SUCCESS="Commit erfolgreich:"