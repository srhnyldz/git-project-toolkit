#!/bin/bash
# English Language File (Updated for consistency)

# --- GENERAL TEXTS ---
LBL_YES="yes"
LBL_NO="no"
LBL_YES_OPTIONS="yes|y"
LBL_RESET_CONFIRM_YES="yes"

# --- git_durum_kontrol.sh TEXTS ---
MSG_SCANNING_DIR="Scanning Directory"
MSG_REPO_TABLE_TITLE="GIT PROJECTS STATUS TABLE"
MSG_NO_GIT_REPOS_FOUND="No Git repositories were found in this directory."
HEADER_PROJECT_NAME="PROJECT NAME"
HEADER_VISIBILITY="VISIBILITY"
HEADER_STATUS="UPDATE STATUS"
HEADER_URL="GITHUB URL"
MSG_UNTRACKED_FILES_TITLE="DIRECTORIES NOT ON GIT"
MSG_ALL_DIRS_ARE_REPOS="All directories are Git repositories."
MSG_UPDATE_NEEDED_REPOS_TITLE="REPOSITORIES REQUIRING UPDATE"
PROMPT_UPDATE_CONFIRM="Do you want to update the out-of-date repositories listed above?"
MSG_UPDATE_SCRIPT_RUNNING="Running update script..."
MSG_OPERATION_CANCELLED="Operation cancelled."
MSG_SCAN_COMPLETE="Scan complete."
ERROR_SCAN_DIRECTORY_NOT_SET="Error: SCAN_DIRECTORY is not set in the .env file. Please set it to the directory you want to scan."

# --- Status Messages (Check) ---
STATUS_LOCAL_REPO="Local Git Repo (No remote added)"
STATUS_GH_CLI_MISSING="[gh not installed]"
STATUS_REPO_NOT_FOUND="[Repo not found]"
STATUS_VISIBILITY_PRIVATE="Private"
STATUS_VISIBILITY_PUBLIC="Public"
STATUS_CHANGES_AWAITING_COMMIT="Changes exist (Awaiting commit)"
STATUS_UP_TO_DATE="Up-to-date"
STATUS_AHEAD_PUSH_AWAITED="Not up-to-date (Push awaited)"
STATUS_BEHIND_REMOTE_NEW="Not up-to-date (Remote is newer)"
STATUS_DIVERGED="Not up-to-date (Diverged)"
STATUS_NO_UPSTREAM="Not tracking (No upstream)"

# --- git_guncelle.sh TEXTS ---
MSG_UPDATE_STARTING="repositories to be updated..."
MSG_TOTAL="Total"
MSG_REPO_PROCESSING="Processing Repo"
MSG_REPO_NOT_ACCESSIBLE="ERROR: Could not enter directory."
MSG_STATUS_LOCAL_CHANGES_FOUND="Status: Local changes found."
MSG_RUNNING_GIT_ADD="Running 'git add .'..."
MSG_RUNNING_GIT_COMMIT="Running 'git commit' (Message:"
COMMIT_MSG_FORMAT="Automatic Update: %Y-%m-%d %H:%M:%S"
MSG_RUNNING_GIT_PUSH="Running 'git push'..."
MSG_PUSH_SUCCESS="SUCCESS: Changes were pushed successfully."
MSG_PUSH_FAIL="ERROR: 'git push' operation failed. Please check manually."
MSG_STATUS_DIR_CLEAN="Status: Local directory is clean. Comparing commits with remote..."
MSG_ONLY_PUSH_AWAITED="Only unpushed commits found. Running 'git push'..."
MSG_PUSH_AWAITED_SUCCESS="SUCCESS: Awaited commits were pushed successfully."
MSG_REPO_BEHIND_WARNING="WARNING: This repo is behind the remote."
MSG_REPO_BEHIND_SKIPPED="Operation SKIPPED due to risk of data loss and conflicts."
MSG_REPO_BEHIND_MANUAL_ACTION="Please update this repo manually with the 'git pull' command."
MSG_REPO_ALREADY_UP_TO_DATE="Repo is already up-to-date. No action taken."
MSG_NO_UPSTREAM_WARNING="WARNING: The local branch of this repo is not tracking a remote branch (No upstream). Cannot push/pull."
MSG_UPDATE_COMPLETE="All update operations are complete."

# --- Interactive Menu Texts (Update) ---
MENU_TITLE="Please choose what you want to do:"
MENU_OPTION_A="[A]bort and proceed to the next repo (Safe, Recommended)"
MENU_DESC_A="This option does not perform any risky operations and leaves the repo as is.\n      You can resolve conflicts manually later."
MENU_OPTION_P="Try to [P]ull changes (Medium Risk)"
MENU_DESC_P="Tries to merge changes from the remote repository with your local one.\n      May result in a 'Merge Conflict' if it cannot merge automatically, and the process will halt."
MENU_OPTION_R="Try to [R]ebase changes (Medium Risk, Clean History)"
MENU_DESC_R="Similar to 'Pull' but rewrites the commit history to keep it linear.\n      Carries the same risk of a 'Rebase Conflict'."
MENU_OPTION_S="[S]crub (Hard Reset) and Sync with Remote (VERY RISKY! BE CAREFUL!)"
MENU_DESC_S="DELETES all your local commits and makes the repo an exact mirror of the one on GitHub.\n      All your unpushed work will be permanently lost!"
PROMPT_INTERACTIVE_CHOICE="Your choice (A, P, R, S): "
MSG_CHOICE_A="Choice: Abort. No changes were made to the repo."
MSG_CHOICE_P="Choice: Pull. Trying 'git pull' command..."
MSG_PULL_SUCCESS="SUCCESS: 'git pull' operation completed. Your repo is now up-to-date."
MSG_PULL_FAIL="ERROR: 'git pull' operation failed. There is likely a conflict."
MSG_PULL_FAIL_MANUAL_ACTION="Please open this repo in the terminal and check manually with 'git status'!"
MSG_CHOICE_R="Choice: Rebase. Trying 'git pull --rebase' command..."
MSG_REBASE_SUCCESS="SUCCESS: 'git pull --rebase' operation completed. Your repo is now up-to-date."
MSG_REBASE_FAIL="ERROR: 'git pull --rebase' operation failed. There is likely a conflict."
MSG_CHOICE_S="Choice: Scrub (Hard Reset). This operation is irreversible!"
PROMPT_RESET_CONFIRM="Are you sure? All your unpushed local changes will be deleted!"
MSG_RESETTING_REPO="Running 'git reset --hard @{u}' command..."
MSG_RESET_SUCCESS="SUCCESS: Repo synced with remote. Local changes were deleted."
MSG_RESET_FAIL="ERROR: Hard reset operation failed."
MSG_RESET_CANCELLED="Hard reset operation cancelled."
MSG_INVALID_CHOICE="Invalid choice. Skipping for safety."

# --- Interactive Commit Texts (Update) ---
PROMPT_COMMIT_TYPE_MENU="Please select a commit type:\n  1) ${GREEN}feat:${NC}     A new feature\n  2) ${YELLOW}fix:${NC}      A bug fix\n  3) ${CYAN}docs:${NC}     Documentation only changes\n  4) ${MAGENTA}style:${NC}    Changes that do not affect the meaning of the code (white-space, formatting, etc)\n  5) ${BLUE}refactor:${NC} A code change that neither fixes a bug nor adds a feature\n  6) ${WHITE}chore:${NC}    Changes to the build process or auxiliary tools\nYour choice:"
PROMPT_COMMIT_SCOPE="Enter commit scope (optional):"
PROMPT_COMMIT_MESSAGE="Enter commit message:"
MSG_COMMIT_SUCCESS="Commit successful:"